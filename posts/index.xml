<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on DevRa</title><link>https://rafed.github.io/devra/posts/</link><description>Recent content in Posts on DevRa</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://rafed.github.io/devra/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>7 Tips on How to win hackathons</title><link>https://rafed.github.io/devra/posts/how-to-win-hackathons/</link><pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/how-to-win-hackathons/</guid><description>In the year 2018, I attended several hackathons. In all of those hackathons, our team managed to make it to the top 3 every time. We even became champion in one. In this article, I&amp;rsquo;ll share some tips from my experience that I think will help you gain an edge in your next hackathon.
1. Understand what the Hackathon is All About Each hackathon is different. Before brainstorming or building prototypes, try to understand</description></item><item><title>My data science coding cheatsheet: Numpy, Scikit, Pandas, Matplotlib, Seaborn, Keras</title><link>https://rafed.github.io/devra/posts/ml/datascience-code-cheatsheet-numpy-scikit-pandas-matplotlib-keras.md/</link><pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/ml/datascience-code-cheatsheet-numpy-scikit-pandas-matplotlib-keras.md/</guid><description>I&amp;rsquo;m tired of looking up the same functions that I repeatedly use for my machine learning pipeline for loading, pre-processing, training and evaluating models. Now I&amp;rsquo;m on a mission to compile them all on this page.
Table of Contents Numpy Pandas Matplotlib Scikit-learn Dimnesionality reduction Pipelines Keras Numpy import numpy as np np.random.seed(42) # Set random seed a = np.arange(6) # [0, 1, 2, 3, 4, 5] a.</description></item><item><title>7 Vulnerable applications for practicing pen-testing</title><link>https://rafed.github.io/devra/posts/security/vulnerable-applications-for-practicing-pentesting/</link><pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/security/vulnerable-applications-for-practicing-pentesting/</guid><description>The best way to learn security concepts is by doing it. But how to do it if you don&amp;rsquo;t know it? These vulnerable apps will make you learn and do it!
1. DVWA Damn Vulnerable Web App (DVWA) is a PHP/MySQL web application that is damn vulnerable.
The app is divided into sections for different types of vulnerabilities. The best thing about DVWA is it has lessons/guidelines on how to exploit a vulnerability.</description></item><item><title>13 terminal commands that you don't need but deserve</title><link>https://rafed.github.io/devra/posts/terminal/terminal-commands-that-you-dont-need-but-deserve/</link><pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/terminal/terminal-commands-that-you-dont-need-but-deserve/</guid><description>&lt;p>The Linux terminal is not all boring and dull. Spice up your life with these fun and awesome commands.&lt;/p></description></item><item><title>Awesome terminal tricks to boost your productivity</title><link>https://rafed.github.io/devra/posts/terminal/awesome-terminal-tricks-to-boost-your-productivity/</link><pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/terminal/awesome-terminal-tricks-to-boost-your-productivity/</guid><description>If you are glued to the terminal, you may want to use the following tricks to improve your productivity. These have been a life saver to me. If you&amp;rsquo;re not a terminal user, these tricks will make you love the terminal again.
Contents: Useful aliases Command editing hacks Running past commands Useful commands Useful aliases Copy the lines starting with alias to your ~/.bashrc file to enable them.</description></item><item><title>Npm commands for npm noobs</title><link>https://rafed.github.io/devra/posts/terminal/npm-commands-for-npm-noobs/</link><pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/terminal/npm-commands-for-npm-noobs/</guid><description>Since diving more deeply into frontend development, I had troubles adjusting with the node ecosystem, more specifically to npm commands. I just keep on forgetting what the npm commands do. So here are my short notes on them.
Basics $ npm --version # check npm version $ npm install -g npm@latest # update npm Notes: npm packages can be installed locally or globally. global packages are installed with -g flag or - -global flag all installed packages get stored in node_modules folder Package installation # initialize a project that will contain node dependencies $ npm init # search for packages $ npm search package_name # install express package $ npm install express # save package as a developer dependency (e.</description></item><item><title>Difference between bash, shell &amp; terminal</title><link>https://rafed.github.io/devra/posts/terminal/bash-vs-shell-vs-terminal/</link><pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/terminal/bash-vs-shell-vs-terminal/</guid><description>People often incorrectly use the terms bash, shell and terminal interchangeably. Whether you are a Linux pro or noob, maybe you&amp;rsquo;ve done it too. Here&amp;rsquo;s what you should know when you use these terms the next time.
Shell A shell is a program that takes command from the keyboard and gives them to the operating system to execute.
In short a shell interacts with the OS for you.</description></item><item><title>Free Front end development tools for the non front end guy</title><link>https://rafed.github.io/devra/posts/webdev/free-front-end-dev-tools-for-non-front-guy/</link><pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/webdev/free-front-end-dev-tools-for-non-front-guy/</guid><description>Front end development is hard if you&amp;rsquo;re not a designer. This list is a collection of tools that will help you speed up your front end workflow as a non front end guy. Lets make front end easy again!
Table of Contents Color palette Design practices Iconography Typography Animations &amp;amp; Effects Photos &amp;amp; videos Illustrations Utilities Color Palette Parametric colormixer - Generate your palette Css gradient - Beautiful gradients Colorsinspo - Pre made color palettes Color Hexa - Learn more information about colors Color Space - Generate nice color palettes, gradients, and matching color schemes Design practices Design checklist - Best design practices to follow Design System Repo - Curated list of designs for inspiration SaaS Landing Page - SaaS landing page inspirations Iconography IconStore - free vector icons by designers Tilda icons - icons for landing page Ikonate - customisable &amp;amp; accessible vector icons.</description></item><item><title>Cases used in programming</title><link>https://rafed.github.io/devra/posts/cases-used-in-programming/</link><pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cases-used-in-programming/</guid><description>You&amp;rsquo;ve probably heard about following camel cases when naming functions and variables. There are more types of cases out there. In this post, we will discover other cases followed in naming conventions and where they are commonly used.
The cases are:
camelCase PascalCase snake_case kebab-case MACRO_CASE 1. camelCase Rules:
Must start with a lower case alphabet All subsequent words must start with a capital letter Examples: count, findBiggestNumber, add1DayToWeek</description></item><item><title>How I suffered by not doing Requirements Engineering</title><link>https://rafed.github.io/devra/posts/how-i-suffered-by-not-doing-requirements-engineering/</link><pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/how-i-suffered-by-not-doing-requirements-engineering/</guid><description>Recently one of my relatives asked me if I could build an eCommerce site for their family clothing business. Since I was busy and couldn&amp;rsquo;t manage the time to do it myself I forwarded the task to two of my fellow juniors. I would just be a middleman connecting both sides and supervise the project.
A plain eCommerce site is trivial these days. The business logic of eCommerce sites have been quite standardized.</description></item><item><title>All kinds of "AAS" in cloud computing</title><link>https://rafed.github.io/devra/posts/all-kinds-of-aas-in-cloud-computing/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/all-kinds-of-aas-in-cloud-computing/</guid><description>From an end users perspective, there are three kinds of aaS in cloud computing. By aaS I mean &amp;ldquo;as a Service&amp;rdquo;. They aaS-es are:
IaaS - Infrastructure as a service PaaS - Platform as a service SaaS - Software as a service As businesses are moving more towards the cloud, understanding the differences between the types of services and also knowing some of the service providers is essential. This article provides a brief intro to these services.</description></item><item><title>The curse of a good domain name</title><link>https://rafed.github.io/devra/posts/webdev/the-curse-of-a-good-domain-name/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/webdev/the-curse-of-a-good-domain-name/</guid><description>We always want a good domain name for our websites, right? The qualities that make a domain good are:
Short name Easy to remember Easy to spell Have a .com extension Doesn&amp;rsquo;t have hyphens/numbers But sometimes, having all of these together may come at a price.
Last week I got a call from my cousin who works at a private company. That company has a website that is managed by some software firm.</description></item><item><title>How to write a research proposal</title><link>https://rafed.github.io/devra/posts/research/how-to-write-a-research-proposal/</link><pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/research/how-to-write-a-research-proposal/</guid><description>&lt;p>If you are writing a research proposal, you&amp;rsquo;ll find the following tips helpful.&lt;/p></description></item><item><title>Why I switched back to Github pages from blogger.com</title><link>https://rafed.github.io/devra/posts/webdev/why-i-switched-back-to-github-pages-from-blogger.com/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/webdev/why-i-switched-back-to-github-pages-from-blogger.com/</guid><description>Previously I used to blog on Github pages with Jekyll. After I discovered blogger.com, I thought I could improve my blogging experience with it. So I made the switch and these were my reasons.
I couldn&amp;rsquo;t find a suitable Jekyll theme for my blog. So I made one for myself. Not being a good UI designer, I made a pretty bad theme. With Blogger.com&amp;rsquo;s WYSIWYG editor I thought I could make a better looking site.</description></item><item><title>Fix bulma mobile view problem</title><link>https://rafed.github.io/devra/posts/webdev/fix-bulma-mobile-view-problem/</link><pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/webdev/fix-bulma-mobile-view-problem/</guid><description>I&amp;rsquo;ve been working with bulma for a while. Although the desktop rendering worked well, there were issues with the mobile view:
Problem There is like a white border on the right The screen is scrollable towards the right (which should not be) Problem Problem fix To fix this, add the following code
.columns { margin: 0; } With the above css it should render properly.
Problem fixed</description></item><item><title>Useful Docker commands</title><link>https://rafed.github.io/devra/posts/docker/useful-docker-commands/</link><pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/docker/useful-docker-commands/</guid><description>&lt;p>This guide is a shortlist of the only docker commands you will ever need to know. I keep on forgetting them, so I&amp;rsquo;m noting them down here.&lt;/p></description></item><item><title>Algorithms that I learned</title><link>https://rafed.github.io/devra/posts/algorithms-i-learned/</link><pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/algorithms-i-learned/</guid><description>This is just a personal list of algorithms that I have learned over time. Since I keep on forgetting them, I decided I should make a list and review them from time to time. If you find the list helpful, thank me in the comments below.
Sorting Insertion Sort Selection Sort Bubble Sort Quick Sort Merge Sort Radix Sort Heap Sort Bogo Sort &amp;amp; Tim Sort 😛 Other things to know about sorting:</description></item><item><title>How to verify news on social media</title><link>https://rafed.github.io/devra/posts/security/how-to-verify-news-on-social-media/</link><pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/security/how-to-verify-news-on-social-media/</guid><description>The narcissist photos and posts on Facebook do not bother me anymore. What does bother me is that people spread fake news and some idiots believe them. And at times I have been unlucky to be on the &amp;ldquo;idiot&amp;rdquo; side of things.
Why people make fake news? The opportunities are endless&amp;hellip;
Fulfill agendas (mostly political) To promote personal beliefs Make people biased towards something More likes and views, eventually leading to more revenue from ads It&amp;rsquo;s fun to spread rumors and see the world collapse&amp;hellip; Why people spread fake news?</description></item><item><title>Most Useful VScode shortcuts</title><link>https://rafed.github.io/devra/posts/most-useful-vscode-shortcuts/</link><pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/most-useful-vscode-shortcuts/</guid><description>VScode is my go-to editor now, but I keep forgetting all the nice shortcuts and commands. This article is a cheat sheet for me to look back when I forget my favorite ones.
VScode has different key bindings for each OS. Although most of the following should be general, if any of them isn&amp;rsquo;t working, the full bindings are available here for Linux, Windows, MacOS.
Editing Ctrl + X Cut line (no need for selection) Ctrl + C Copy line (no need for selection) Alt + ↓/↑ Move line up/down Ctrl + / Toggle line comment Ctrl + Shift + I Format document Ctrl + .</description></item><item><title>Guidelines to follow when writing a research paper</title><link>https://rafed.github.io/devra/posts/research/research-paper-writing-guidelines/</link><pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/research/research-paper-writing-guidelines/</guid><description>This article is not meant to be a complete guide for paper writing. It is just a cheat sheet for me to follow when I&amp;rsquo;m lost.
A research paper typically has the following sections:
Title Abstract Introduction Literature review Methodology Experiment/Results Acknowledgments (Optional) Conclusion References Appendices (Optional) 1. Title The title should express 3 aspects:
The research domain Purpose of the research The methods used (methodology) Additional tips:</description></item><item><title>How I Accidentally Published a Research Paper at IWOR (ICSE)</title><link>https://rafed.github.io/devra/posts/research/how-i-published-a-research-paper-at-iwor/</link><pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/research/how-i-published-a-research-paper-at-iwor/</guid><description>In our final semester of university, we had a course called &amp;ldquo;Software Metrics.&amp;rdquo; Ths study of software metrics aims at measuring the properties of software. I didn&amp;rsquo;t like this course very much. It was theoretical and a bit boring. I&amp;rsquo;m usually fond of more practical stuff.
In most of our courses, we have to complete a project by the end of the semester. For the software metrics course, we were to build a tool that shows several known metrics of a Java program.</description></item><item><title>Parsing C++/Java/C# the Easy Way (with srcML)</title><link>https://rafed.github.io/devra/posts/parsing-cpp-java-cs-with-srcml/</link><pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/parsing-cpp-java-cs-with-srcml/</guid><description>Recently I needed to parse C++ code to analyze some projects. I tried out several parsers (clang, libclang, cppast) but I just couldn&amp;rsquo;t get them to work for me. I didn&amp;rsquo;t find their documentation easy to understand. That&amp;rsquo;s maybe because I&amp;rsquo;m not so familiar with the C++ ecosystem. I suffered for quite a while until I found this awesome tool called srcML.
srcML is a lightweight tool for the exploration of source code that presents source code in an XML format.</description></item><item><title>Why even noobs should participate in CTFs</title><link>https://rafed.github.io/devra/posts/security/why-even-noobs-should-participate-in-ctfs/</link><pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/security/why-even-noobs-should-participate-in-ctfs/</guid><description>A few days back Facebook held their first-ever CTF and Google also held theirs a few days later. Although I occasionally goof around with CTFs, I&amp;rsquo;m no expert at it. Despite this, I decided to take an attempt. I was skeptical at first but it turned out to be an awesome experience.
In case you don&amp;rsquo;t know what a CTF (capture the flag) is, it&amp;rsquo;s almost like a treasure hunt where you have to find a treasure by exploiting security loopholes.</description></item><item><title>Bare minimum Multi-tasking guide for the terminal with Tmux</title><link>https://rafed.github.io/devra/posts/terminal/multitasking-in-terminal-with-tmux/</link><pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/terminal/multitasking-in-terminal-with-tmux/</guid><description>Have you ever-
SSHed to a server and felt the need of another terminal session because the current one was already running something? SSHed to a server to run a long-running process but couldn&amp;rsquo;t close the terminal because it would terminate the process? Wanted to wok with multi-window terminal like the picture above? Wanted to continue from where you left off your terminal the last time? If your answers to the questions are yes, then Tmux is the tool you need.</description></item><item><title>7 Github repos that will make You Lol</title><link>https://rafed.github.io/devra/posts/git/github-repos-that-will-make-you-lol/</link><pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/git/github-repos-that-will-make-you-lol/</guid><description>Call me a nerd, but I find GitHub repositories to be entertaining. Here are some of my favorite ones that truly made me LOL. You don&amp;rsquo;t need to run any code or that sort of stuff. Just go through the READMEs.
1. hacker-scripts github.com/NARKOZ/hacker-scripts This is a story about a guy who left his job. His colleagues go through his legacy and found things they never imagined they would find.</description></item><item><title>Biological names used in computer science</title><link>https://rafed.github.io/devra/posts/biological-names-used-in-computer-science/</link><pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/biological-names-used-in-computer-science/</guid><description>Once one of my biology teachers (boma Mizan :p ) said that biological names are used everywhere in technology. I suddenly recalled that memory and now I&amp;rsquo;m making a list of every biological name used in technology.
Amazon: Amazon is a rainforest in South America. Amazon is an American company focusing on e-commerce. Anaconda: Anaconda is a snake. Anaconda is a free and open-source distribution of the Python programming language for scientific computation.</description></item><item><title>Kali as a regular operating system</title><link>https://rafed.github.io/devra/posts/security/kali-as-regular-os/</link><pubDate>Tue, 25 Jun 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/security/kali-as-regular-os/</guid><description>If you are an aspiring pentester you should definitely use Kali Linux and make it your primary OS. Switching to a new OS can be a very hard decision to make. Concerns such as whether you can do your regular work may rise. It has been quite a while (3 years) since I am using Kali as my primary OS and here are my experiences with it.
If you are shifting from a Windows environment and have no prior experience with Linux operating systems it&amp;rsquo;s best not to move to Kali just yet.</description></item><item><title>How many programming languages should I learn</title><link>https://rafed.github.io/devra/posts/how-many-programming-languages-to-learn/</link><pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/how-many-programming-languages-to-learn/</guid><description>Has it ever occurred to you, that you see a new programming language and you feel an urge to learn it? If love hobby programming then I&amp;rsquo;m pretty sure that you&amp;rsquo;ve had this dilemma of choosing whether to learn a language or not. Sometimes the fear of missing out makes us want to learn as many languages as possible. But how many languages do we actually need to learn?
Every language out there have their specialty that makes it worth learning.</description></item><item><title>How to be a hacker with Kali</title><link>https://rafed.github.io/devra/posts/security/be-hacker-with-kali/</link><pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/security/be-hacker-with-kali/</guid><description>If you&amp;rsquo;ve discovered Kali Linux and thinking about how you can hack with it, you probably can&amp;rsquo;t and you’re probably walking in the wrong direction.
Kali is not a magic OS that can hack everything. It is just an operating system that comes with preinstalled pentesting tools. Now, you really cannot expect a tool to do everything by itself. You need to understand when it works, where it works, and how it works.</description></item><item><title>DSSE: A software engineering research group in Bangladesh</title><link>https://rafed.github.io/devra/posts/research/software-engineering-research-and-dsse/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/research/software-engineering-research-and-dsse/</guid><description>If you want to know about research areas in Software Engineering and conferences/journals related to software engineering then this article is for you.
The Distributed Systems and Software Engineering (DSSE) group at the Institute of Information Technology (IIT) is an active group dedicated to Software Engineering research. The group was formed in Bangladesh in 2012 with a few members. Currently, it is a large group consisting of members all around the world.</description></item><item><title>How I accidentally visited a datacenter</title><link>https://rafed.github.io/devra/posts/how-i-accidentally-visited-a-datacenter/</link><pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/how-i-accidentally-visited-a-datacenter/</guid><description>So, some of my friends were looking for a VPS for their research work. High config AWS or GCP is really expensive so they were looking for alternatives. That&amp;rsquo;s when our professor told them to meet a guy called Mahedi. They dragged me along to meet him and I&amp;rsquo;m glad that they did.
So Mahedi bhai works at BdREN (Bangladesh Education and Research Network). BdREN connects all the public Universities in Bangladesh through a fiber-optic network and provides fast internet and other cloud services.</description></item><item><title>draw.io - Best online prototyping tool</title><link>https://rafed.github.io/devra/posts/draw-io/</link><pubDate>Sun, 05 Nov 2017 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/draw-io/</guid><description>If you&amp;rsquo;re looking for a free and awesome prototyping/wireframing/mockup UI tool, search no more, go to draw.io
There are a lot of prototyping tools available online but most of them are very annoying. Either they are paid or requires signing up. And the most annoying are the ones where you&amp;rsquo;ve finally drawn something and then they say you need to sign up to download the image.
Draw.io is the tool that works best for me.</description></item><item><title>Image clustering</title><link>https://rafed.github.io/devra/posts/ml/image-clustering/</link><pubDate>Mon, 18 Sep 2017 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/ml/image-clustering/</guid><description>Clustering is a technique to group similar elements together. The following shows a simple program codebase is a small attempt to cluster colors in images.
At the heart of the program lies the K-Means algorithm. The source is available at github.com/rafed/Image-clustering.
Original Averaged - 2 clusters Averaged - 6 clusters Look at the &amp;ldquo;original image&amp;rdquo; above. There are pixels of many different colors.</description></item><item><title>How difficult is programming</title><link>https://rafed.github.io/devra/posts/how-difficult-is-programming/</link><pubDate>Sat, 16 Sep 2017 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/how-difficult-is-programming/</guid><description>One of the first questions asked by beginners who want to start programming is, &amp;ldquo;How difficult is programming?&amp;rdquo; The answer in short is, learning a programming language is easy. Writing a good program is difficult.
Think about it this way. You know English, but are you a good writer? To be a good writer you&amp;rsquo;ll need years of practice and dedication before you can write something that will be appreciated by all.</description></item><item><title>Implementing google custom search bar in your site</title><link>https://rafed.github.io/devra/posts/webdev/implement-google-custom-search/</link><pubDate>Thu, 24 Aug 2017 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/webdev/implement-google-custom-search/</guid><description>Look at the top-right side of the page below, you&amp;rsquo;ll see a Google custom search bar. If you want to implement a search bar like this on your site, you&amp;rsquo;ve come to the right place!
There are two ways you can implement the google custom search bar:
Simple implementation Custom implementation Simple implementation First go to cse.google.com/cse/ and click on New search engine.
Fill up:
sites to search (the URL of your site) name of the search engine (name it whatever you like) and click on Create.</description></item><item><title>5 reasons why Linux needs no antivirus</title><link>https://rafed.github.io/devra/posts/security/why-linux-needs-no-antivirus/</link><pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/security/why-linux-needs-no-antivirus/</guid><description>So, maybe you have heard Linux PCs are super safe because they are not affected by viruses. Linux computers are almost immune to viruses. Yes, I said &amp;ldquo;almost&amp;rdquo; immune. But the percentage of PCs being affected is very less, even less than 1%. That is why people say that Linux does not need any antivirus. But why is that have you ever wondered? Here are the top 5 reasons why viruses do not affect Linux.</description></item><item><title>Top 10 practical reasons to use Jekyll for your site/blog</title><link>https://rafed.github.io/devra/posts/webdev/reasons-to-use-jekyll/</link><pubDate>Fri, 07 Jul 2017 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/webdev/reasons-to-use-jekyll/</guid><description>I wanted to make a site but I could not decide which building platform to choose from, Wordpress or Jekyll? On one hand I had the incredible power of Wordpress and on the other hand my love for GitHub pages with Jekyll. Finally, I thought I would love to push content to my repo in Github with the terminal. So I went with Jekyll.
But Jekyll seemed complicated. It was difficult to start with.</description></item></channel></rss>