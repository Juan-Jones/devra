<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kubernetes on DevRa</title><link>https://rafed.github.io/devra/tags/kubernetes/</link><description>Recent content in kubernetes on DevRa</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 18 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://rafed.github.io/devra/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes Autoscaling</title><link>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/5.-kubernetes-auto-scaling/</link><pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/5.-kubernetes-auto-scaling/</guid><description>In the previous blog post we deployed an nginx container with 3 replicas. Replicas allows us to upscale an application and increase its availability and performance. However, we generally want the replica count of a pod to be dynamic.</description></item><item><title>Kubernetes: From Writing Code to Deploying in Kubernetes</title><link>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/4.-kubernetes-code-to-deployment/</link><pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/4.-kubernetes-code-to-deployment/</guid><description>From Writing Code to Deploying in Kubernetes A typical Kubernetes workflow follows the following steps-
Write code Containerize app Send to container registry Deploy to Kubernetes graph TD A[Write Code] -- B B[Containerzie app] -- C C[Send to container registry] -- D[Deploy to Kubernetes] 1.</description></item><item><title>Kubernetes Storage</title><link>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/3.-kubernetes-storage/</link><pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/3.-kubernetes-storage/</guid><description>Pods in Kubernetes are volatile. That means if a pod crashes or restarts then the data stored previously is lost. Volumes in Kubernetes decouple storage from pods and provides a method for persisting data.
For persistent storage in Kubernetes, we need to know 3 things.</description></item><item><title>Kubernetes Networking</title><link>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/2.-kubernetes-networking/</link><pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/2.-kubernetes-networking/</guid><description>Kubernetes is a container orchestration platform. It is used to help containers in a cluster communicate between them in an easy way. This is where networking in Kubernetes kicks in. To understand how Kubernetes works, knowing its basic underlying networking concepts is a fundamental necessity.</description></item><item><title>Kubernetes Overview</title><link>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/1.-kubernetes-basics/</link><pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/1.-kubernetes-basics/</guid><description>What is Kubernetes? Kubernetes is an open source platform for running cloud native apps Its a layer over Vms and provide a rich set of APIs for running cloud native apps What are cloud native apps?</description></item><item><title>Monitor Kubernetes Apps through Metrics, Logs and Traces (MLT)</title><link>https://rafed.github.io/devra/posts/cloud/kubernetes/mlt-in-kubernetes/</link><pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cloud/kubernetes/mlt-in-kubernetes/</guid><description>Metrics, Logs and Traces (MLT) are the three pillars of monitoring that can give us complete observability of a system.
In this article, we&amp;rsquo;re going to set up all three of MLT on a Kubernetes platform to monitor an app made with microservices.</description></item><item><title>Kubernetes CLI Cheat Sheet (kubectl, helm, minikube)</title><link>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/0.-kubernetes-cheat-sheet-kubectl-helm-minikube/</link><pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/sections/kubernetes-minified-simplified/0.-kubernetes-cheat-sheet-kubectl-helm-minikube/</guid><description>This cheat sheet focuses on the most important CLI commands for Kubectl, helm and minikube CLIs.
But what are the differences between them you ask?
kubectl: The most important CLI to learn. It is used to manage a Kubernetes cluster helm: Package manager for Kubernetes.</description></item><item><title>Getting Started with Kubernetes using Minikube (and Django)</title><link>https://rafed.github.io/devra/posts/cloud/kubernetes/getting-started-with-kubernetes-using-minikube/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cloud/kubernetes/getting-started-with-kubernetes-using-minikube/</guid><description>Today at work, I was asked whether I could deploy an application to a Kubernetes cluster within a few days. Although I am fairly familiar with container based technologies like docker and docker-compose, the Kubernetes side of things was something I hadn&amp;rsquo;t explored before.</description></item></channel></rss>