<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software engineering on DevRa</title><link>https://rafed.github.io/devra/tags/software-engineering/</link><description>Recent content in software engineering on DevRa</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 24 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://rafed.github.io/devra/tags/software-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Cases used in programming</title><link>https://rafed.github.io/devra/posts/cases-used-in-programming/</link><pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/cases-used-in-programming/</guid><description>You&amp;rsquo;ve probably heard about following camel cases when naming functions and variables. There are more types of cases out there. In this post, we will discover other cases followed in naming conventions and where they are commonly used.
The cases are:
camelCase PascalCase snake_case kebab-case MACRO_CASE 1. camelCase Rules:
Must start with a lower case alphabet All subsequent words must start with a capital letter Examples: count, findBiggestNumber, add1DayToWeek</description></item><item><title>How I suffered by not doing Requirements Engineering</title><link>https://rafed.github.io/devra/posts/how-i-suffered-by-not-doing-requirements-engineering/</link><pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/how-i-suffered-by-not-doing-requirements-engineering/</guid><description>Recently one of my relatives asked me if I could build an eCommerce site for their family clothing business. Since I was busy and couldn&amp;rsquo;t manage the time to do it myself I forwarded the task to two of my fellow juniors. I would just be a middleman connecting both sides and supervise the project.
A plain eCommerce site is trivial these days. The business logic of eCommerce sites have been quite standardized.</description></item><item><title>All kinds of "AAS" in cloud computing</title><link>https://rafed.github.io/devra/posts/all-kinds-of-aas-in-cloud-computing/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/all-kinds-of-aas-in-cloud-computing/</guid><description>From an end users perspective, there are three kinds of aaS in cloud computing. By aaS I mean &amp;ldquo;as a Service&amp;rdquo;. They aaS-es are:
IaaS - Infrastructure as a service PaaS - Platform as a service SaaS - Software as a service As businesses are moving more towards the cloud, understanding the differences between the types of services and also knowing some of the service providers is essential. This article provides a brief intro to these services.</description></item><item><title>Parsing C++/Java/C# the Easy Way (with srcML)</title><link>https://rafed.github.io/devra/posts/parsing-cpp-java-cs-with-srcml/</link><pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/parsing-cpp-java-cs-with-srcml/</guid><description>Recently I needed to parse C++ code to analyze some projects. I tried out several parsers (clang, libclang, cppast) but I just couldn&amp;rsquo;t get them to work for me. I didn&amp;rsquo;t find their documentation easy to understand. That&amp;rsquo;s maybe because I&amp;rsquo;m not so familiar with the C++ ecosystem. I suffered for quite a while until I found this awesome tool called srcML.
srcML is a lightweight tool for the exploration of source code that presents source code in an XML format.</description></item><item><title>draw.io - Best online prototyping tool</title><link>https://rafed.github.io/devra/posts/draw-io/</link><pubDate>Sun, 05 Nov 2017 00:00:00 +0000</pubDate><guid>https://rafed.github.io/devra/posts/draw-io/</guid><description>If you&amp;rsquo;re looking for a free and awesome prototyping/wireframing/mockup UI tool, search no more, go to draw.io
There are a lot of prototyping tools available online but most of them are very annoying. Either they are paid or requires signing up. And the most annoying are the ones where you&amp;rsquo;ve finally drawn something and then they say you need to sign up to download the image.
Draw.io is the tool that works best for me.</description></item></channel></rss>